# -*- coding: utf-8 -*-
"""Donor Patient Red Cross EDA 13 Sep 2025

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EsuQZVWAqV-4T049sXPQ7QQNriZjj6_f

##**RED CROSS DATA SET EXPLORATORY DATA ANALISYS**
#dataset
"""

#code snippet 1
#installing packages for Data analisys and EDA
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import missingno as msno

#code snippet 2
#importing dataset for the URl
data = pd.read_csv('https://raw.githubusercontent.com/Imjuandiaz/Red-Cross-Donor-Indicator-Data-Project/refs/heads/main/Data/Donor%20Dataset%20-%202023%20.csv')

data

"""#Feature Engineering"""

#code snippet 3
#data columns and types
data.dtypes

#code snippet 4
#displaying proportion of featuring in the dataset with missingno
msno.bar(data)

#code snippet 5
#droping the featuring that are missing more the 20%of data 'MaritalStatus' 'AcademicDegreeLevel'	'DonorDateOfBirth'
data = data.drop(columns=["DonorDateOfBirth", "AcademicDegreeLevel", "MaritalStatus", "IsMemberFlag"])

# Drop non-predictive ID column
data = data.drop(columns=["DonorUniqueId"])


data

# Code Snippet 6
# Convert donation columns to numeric
donation_year_cols = [
    "LastFiscalYearDonation","Donation2FiscalYearsAgo",
    "Donation3FiscalYearsAgo","Donation4FiscalYearsAgo",
    "Donation5FiscalYearsAgo","CurrentFiscalYearDonation"
]
donation_all_cols = donation_year_cols + ["CumulativeDonationAmount"]

for col in donation_all_cols:
    data[col] = (
        data[col].astype(str)
        .str.replace(r"[\\$,]", "", regex=True)   # remove $ and commas
        .replace({"": "0", "nan": "0"})
        .astype(float)
    )

# Code Snippet 7
# Convert flag columns from Y/N to 0/1
flag_cols = [
    "IsAlumnusFlag","IsParentFlag",
    "HasInvolvementFlag","HasEmailFlag","DonorIndicatorFlag."
]

for col in flag_cols:
    data[col] = data[col].map({"Y": 1, "N": 0})
    data[col] = data[col].fillna(0)

# Code Snippet 8
# Clean DonorPostalCode (string only, no frequency encoding)

# Ensure postal code is a string
data["DonorPostalCode"] = data["DonorPostalCode"].astype(str)

# Replace "nan" or "NaN" with "Unknown"
data["DonorPostalCode"] = data["DonorPostalCode"].replace({"nan": "Unknown", "NaN": "Unknown"})

# Remove trailing ".0" if the code was imported as float (e.g., "23187.0" â†’ "23187")
data["DonorPostalCode"] = data["DonorPostalCode"].str.replace(r"\.0$", "", regex=True)

# Code Snippet 9
# Fill missing values

for col in data.select_dtypes(include=[np.number]).columns:
    data[col] = data[col].fillna(data[col].median())

for col in data.select_dtypes(include=["object"]).columns:
    data[col] = data[col].fillna("Unknown")

#final Check
data

data.dtypes

#code snippet
#displaying proportion of featuring in the dataset with missingno
msno.bar(data)

"""#Statisticals Analisys"""

#code snippet 10
#displaying statistical analysis
data.describe()

"""#Correlation Analisys"""

#code snippet 11
#installing dython for correlation analysis
!pip install dython

#code snippet 12
#import dython for correlacion analisys
import dython
from dython.nominal import associations
corr = associations(data)

#code snippet 13
# Storing the correlations in a matrix
assoc_matrix = corr['corr']

#code snippet 14
#Setting the target variable DonorIndicator
target = 'DonorIndicatorFlag.'

# List the associated variables in the descending order of influence on the target variable
assoc_matrix[target].abs().sort_values(ascending=False)

"""#Exploratory Data Anlisys"""

#code snippet 15
# Installing ydata profiling package for detailed data profiling (Exploratory Data Analysis, EDA)
!pip install -U ydata-profiling

#installing ydata profiling package for detailed data profiling
from ydata_profiling import ProfileReport
profile = ProfileReport(data)
profile.to_file(output_file='Donor_Prediction_analisys_RedCross2025.html')

"""#Visual Interactive Charts"""

#code snippet 16
# Installing AutoViz package for auto visualizations
!pip install git+https://github.com/AutoViML/AutoViz.git

#code snippet 17
#importing Auto Viz for Visual Reference to DonorIndicatorFlag.
import pandas as pd
from autoviz.AutoViz_Class import AutoViz_Class
# create a class
AV = AutoViz_Class()

#code snippet 18
# Generating visuals using AutoViz modules
AV.AutoViz(data, verbose = 2, depVar= 'DonorIndicatorFlag.',)